{
	"info": {
		"_postman_id": "26ca1ffd-f4c7-4e63-b7ff-f0e4d61183a1",
		"name": "SpaceX",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://api.spacexdata.com/v4/launches/latest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a5ccd73-a132-41b1-95cc-932b313a12fe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has rocket,crew, ships, capsules, payloads, cores\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody(\"rocket\");",
							"    pm.response.to.have.jsonBody(\"crew\");",
							"    pm.response.to.have.jsonBody(\"ships\");",
							"    pm.response.to.have.jsonBody(\"capsules\");",
							"    pm.response.to.have.jsonBody(\"payloads\");",
							"    pm.response.to.have.jsonBody(\"cores\");",
							"    pm.response.to.not.have.jsonBody(\"error\");",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Check the data type of response for rocket,crew, ships, capsules, payloads, cores\", function () {",
							"    pm.expect(jsonData.rocket).to.be.a(\"string\")",
							"    pm.expect(jsonData.crew).to.be.an(\"array\");",
							"    pm.expect(jsonData.ships).to.be.an(\"array\");",
							"    pm.expect(jsonData.capsules).to.be.an(\"array\");",
							"    pm.expect(jsonData.payloads).to.be.an(\"array\");",
							"    pm.expect(jsonData.cores).to.be.an(\"array\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.spacexdata.com/v4/launches/latest",
					"protocol": "https",
					"host": [
						"api",
						"spacexdata",
						"com"
					],
					"path": [
						"v4",
						"launches",
						"latest"
					]
				}
			},
			"response": []
		}
	]
}